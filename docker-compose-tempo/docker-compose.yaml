networks:
  monitoring:

services:
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "3200:3200" # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
    networks:
      - monitoring

  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - monitoring
  
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --storage.tsdb.retention.time=14d
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      # Dashboard 還是手動匯入
      #- ./grafana/dashboards:/etc/dashboards
      #- ./grafana/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./admin_password:/run/secrets/admin_password # 如果不想用 admin 密碼，這行刪除
    environment:
      # - GF_AUTH_ANONYMOUS_ENABLED=true # 如果不想用 admin 密碼，這邊取消註解
      # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # 如果不想用 admin 密碼，這邊取消註解
      # - GF_AUTH_DISABLE_LOGIN_FORM=true # 如果不想用 admin 密碼，這邊取消註解
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/admin_password # 如果不想用 admin 密碼，這行刪除
    ports:
      - "3000:3000"
    networks:
      - monitoring
  
  # Collector
  # 參考：https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/examples/demo
  # otel-collector:
  #   image: otel/opentelemetry-collector:0.118.0
  #   restart: always
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - "1888:1888"   # pprof extension
  #     - "8888:8888"   # Prometheus metrics exposed by the collector
  #     - "8889:8889"   # Prometheus exporter metrics
  #     - "13133:13133" # health_check extension
  #     - "4317:4317"   # OTLP gRPC receiver
  #     - "55679:55679" # zpages extension
  #   depends_on:
  #     - tempo

  webapp1:
    image: webapplication1-release:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    ports:
      - "5132:8080"
    networks:
      - monitoring
  webapp2:
    image: webapplication2-release:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    ports:
      - "5133:8080"
    networks:
      - monitoring